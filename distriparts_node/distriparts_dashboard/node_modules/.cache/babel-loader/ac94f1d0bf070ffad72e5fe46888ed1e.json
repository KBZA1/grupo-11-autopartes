{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Osman\\\\Desktop\\\\ProyectoIntegrador\\\\distriparts_dashboard\\\\src\\\\components\\\\ContentRowMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SmallCard from \"./SmallCard\";\n/*  Cada set de datos es un objeto literal */\n\n/* <!-- Movies in DB --> */\n\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContentRowMovies() {\n  _s();\n\n  const [info, setInfo] = useState(null);\n  const [products, setProducts] = useState();\n  const [users, setUsers] = useState();\n  const [brands, setBrands] = useState();\n  const [categories, setCategories] = useState();\n  const [subcategories, setSubcategories] = useState();\n  const [orders, setOrders] = useState();\n  useEffect(() => {\n    const allInfo = async () => {\n      let resProducts = await fetch(`http://localhost:5001/api/products/`);\n      let productsSaved = await resProducts.json(); // console.log(productsSaved);\n      // title.push(\"Total de productos\");\n      // setTitle(title);\n      // color.push(\"warning\");\n      // setColor(color);\n      //   return products;\n\n      let resUsers = await fetch(`http://localhost:3001/api/users/`);\n      let usersSaved = await resUsers.json(); // console.log(usersSaved);\n      // title.push(\"Total de usuarios\");\n      // setTitle(title);\n      // color.push(\"danger\");\n      // setColor(color);\n      //   return users;\n\n      let resCategories = await fetch(`http://localhost:3001/api/products/categories`);\n      let categoriesSaved = await resCategories.json(); // console.log(categoriesSaved);\n\n      let resSubcategories = await fetch(`http://localhost:3001/api/products/subcategories`);\n      let subcategoriesSaved = await resSubcategories.json(); // console.log(subcategoriesSaved);\n      // title.push(\"Total de categorías\");\n      // setTitle(title);\n      // color.push(\"success\");\n      // setColor(color);\n      //   return users;\n\n      let resBrands = await fetch(`http://localhost:3001/api/products/brands`);\n      let brandsSaved = await resBrands.json(); // console.log(brandsSaved);\n\n      let resOrders = await fetch(`http://localhost:3001/api/products/orders`);\n      let ordersSaved = await resOrders.json(); // console.log(ordersSaved);\n      // title.push(\"Total de marcas\");\n      // setTitle(title);\n      // color.push(\"primary\");\n      // setColor(color);\n\n      setProducts({\n        title: \"Total de productos\",\n        quantity: productsSaved.meta.count,\n        color: \"warning\",\n        icon: \"fa-clipboard-list\"\n      });\n      setUsers({\n        title: \"Total de usuarios\",\n        quantity: usersSaved.meta.count,\n        color: \"primary\",\n        icon: \"fa-users\"\n      });\n      setCategories({\n        title: \"Total de categorías\",\n        quantity: categoriesSaved.meta.count,\n        color: \"danger\",\n        icon: \"fa-asterisk\"\n      });\n      setSubcategories({\n        title: \"Total de subcategorías\",\n        quantity: subcategoriesSaved.meta.count,\n        color: \"info\",\n        icon: \"fa-arrows-alt\"\n      });\n      setBrands({\n        title: \"Total de marcas\",\n        quantity: brandsSaved.meta.count,\n        color: \"success\",\n        icon: \"fa-chess-knight\"\n      });\n      setOrders({\n        title: \"Total de orders\",\n        quantity: ordersSaved.meta.count,\n        color: \"secondary\",\n        icon: \"fa-columns\"\n      }); // setInfo({\n      //   products: products,\n      //   users: users,\n      //   categories: categories,\n      //   brands: brands,\n      // });\n      //\n      //   por que undefined???????\n      //\n      // console.log(info);\n    };\n\n    allInfo();\n  }, []);\n  useEffect(() => {\n    // console.log(products);\n    setInfo({\n      products,\n      users,\n      categories,\n      subcategories,\n      brands,\n      orders\n    });\n  }, [products, users, categories, subcategories, brands, orders]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: info && //why not info??????\n    Object.values(info).map((category, i) => {\n      return /*#__PURE__*/_createElement(SmallCard, { ...category,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 18\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContentRowMovies, \"irXYw/wFCalIJ82dx3iRXzqqX+k=\");\n\n_c = ContentRowMovies;\nexport default ContentRowMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentRowMovies\");","map":{"version":3,"sources":["C:/Users/Osman/Desktop/ProyectoIntegrador/distriparts_dashboard/src/components/ContentRowMovies.js"],"names":["React","useState","useEffect","SmallCard","ContentRowMovies","info","setInfo","products","setProducts","users","setUsers","brands","setBrands","categories","setCategories","subcategories","setSubcategories","orders","setOrders","allInfo","resProducts","fetch","productsSaved","json","resUsers","usersSaved","resCategories","categoriesSaved","resSubcategories","subcategoriesSaved","resBrands","brandsSaved","resOrders","ordersSaved","title","quantity","meta","count","color","icon","Object","values","map","category","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SmallCard from \"./SmallCard\";\r\n\r\n/*  Cada set de datos es un objeto literal */\r\n\r\n/* <!-- Movies in DB --> */\r\n\r\nfunction ContentRowMovies() {\r\n  const [info, setInfo] = useState(null);\r\n  const [products, setProducts] = useState();\r\n  const [users, setUsers] = useState();\r\n  const [brands, setBrands] = useState();\r\n  const [categories, setCategories] = useState();\r\n  const [subcategories, setSubcategories] = useState();\r\n  const [orders, setOrders] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const allInfo = async () => {\r\n      let resProducts = await fetch(`http://localhost:5001/api/products/`);\r\n      let productsSaved = await resProducts.json();\r\n      // console.log(productsSaved);\r\n\r\n      // title.push(\"Total de productos\");\r\n      // setTitle(title);\r\n      // color.push(\"warning\");\r\n      // setColor(color);\r\n      //   return products;\r\n\r\n      let resUsers = await fetch(`http://localhost:3001/api/users/`);\r\n      let usersSaved = await resUsers.json();\r\n      // console.log(usersSaved);\r\n\r\n      // title.push(\"Total de usuarios\");\r\n      // setTitle(title);\r\n      // color.push(\"danger\");\r\n      // setColor(color);\r\n      //   return users;\r\n\r\n      let resCategories = await fetch(\r\n        `http://localhost:3001/api/products/categories`\r\n      );\r\n      let categoriesSaved = await resCategories.json();\r\n      // console.log(categoriesSaved);\r\n\r\n      let resSubcategories = await fetch(\r\n        `http://localhost:3001/api/products/subcategories`\r\n      );\r\n      let subcategoriesSaved = await resSubcategories.json();\r\n      // console.log(subcategoriesSaved);\r\n\r\n      // title.push(\"Total de categorías\");\r\n      // setTitle(title);\r\n      // color.push(\"success\");\r\n      // setColor(color);\r\n      //   return users;\r\n\r\n      let resBrands = await fetch(`http://localhost:3001/api/products/brands`);\r\n      let brandsSaved = await resBrands.json();\r\n      // console.log(brandsSaved);\r\n\r\n      let resOrders = await fetch(`http://localhost:3001/api/products/orders`);\r\n      let ordersSaved = await resOrders.json();\r\n      // console.log(ordersSaved);\r\n\r\n      // title.push(\"Total de marcas\");\r\n      // setTitle(title);\r\n      // color.push(\"primary\");\r\n      // setColor(color);\r\n      setProducts({\r\n        title: \"Total de productos\",\r\n        quantity: productsSaved.meta.count,\r\n        color: \"warning\",\r\n        icon: \"fa-clipboard-list\"\r\n      });\r\n      setUsers({\r\n        title: \"Total de usuarios\",\r\n        quantity: usersSaved.meta.count,\r\n        color: \"primary\",\r\n        icon: \"fa-users\"\r\n      });\r\n      setCategories({\r\n        title: \"Total de categorías\",\r\n        quantity: categoriesSaved.meta.count,\r\n        color: \"danger\",\r\n        icon: \"fa-asterisk\"\r\n      });\r\n      setSubcategories({\r\n        title: \"Total de subcategorías\",\r\n        quantity: subcategoriesSaved.meta.count,\r\n        color: \"info\",\r\n        icon: \"fa-arrows-alt\"\r\n      });\r\n      setBrands({\r\n        title: \"Total de marcas\",\r\n        quantity: brandsSaved.meta.count,\r\n        color: \"success\",\r\n        icon: \"fa-chess-knight\"\r\n      });\r\n      setOrders({\r\n        title: \"Total de orders\",\r\n        quantity: ordersSaved.meta.count,\r\n        color: \"secondary\",\r\n        icon: \"fa-columns\"\r\n      });\r\n      // setInfo({\r\n      //   products: products,\r\n      //   users: users,\r\n      //   categories: categories,\r\n      //   brands: brands,\r\n      // });\r\n      //\r\n      //   por que undefined???????\r\n      //\r\n      // console.log(info);\r\n    };\r\n\r\n    allInfo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(products);\r\n    setInfo({ products, users, categories, subcategories, brands, orders });\r\n  }, [products, users, categories, subcategories, brands, orders]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {/* {console.log(info)} */}\r\n      {info && //why not info??????\r\n        Object.values(info).map((category, i) => {\r\n          return <SmallCard {...category} key={i} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentRowMovies;"]},"metadata":{},"sourceType":"module"}